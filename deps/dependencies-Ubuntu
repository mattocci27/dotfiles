#!/usr/bin/env bash
set -e

echo "Installing tools..."
sudo add-apt-repository -y ppa:apptainer/ppa
sudo apt update -y
sudo apt install -y xsel \
  ca-certificates \
  build-essential \
  neovim \
  peco \
  fzf \
  zsh \
  tmux \
  tree \
  make \
  curl \
  wget \
  cargo \
  neofetch \
  ripgrep \
  libopenblas-dev \
  snapd \
  nodejs \
  stow \
  bat \
  exa \
  apptainer \
  openssh-server \
  pipx

# form tidyverse
sudo apt install -y \
  libxml2-dev \
  libcairo2-dev \
  libgit2-dev \
  default-libmysqlclient-dev \
  libpq-dev \
  libsasl2-dev \
  libsqlite3-dev \
  libssh2-1-dev \
  libxtst6 \
  libcurl4-openssl-dev \
  unixodbc-dev

# python
# sudo ap install -y python3-tk tk-dev


# R
# echo "Installing R..."
# sudo apt install -y dirmngr gnupg

# wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | gpg --dearmor | sudo tee /usr/share/keyrings/cran-archive-keyring.gpg > /dev/null

# echo "deb [signed-by=/usr/share/keyrings/cran-archive-keyring.gpg] https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/" | sudo tee /etc/apt/sources.list.d/cran.list > /dev/null

# sudo apt update -y
# sudo apt install -y r-base

echo "Installing python..."
sudo pipx install poetry

# sudo apt install -y \
#   python3-pip \
#   docker-compose

echo "Installing docker..."
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo usermod -aG docker $USER

# echo "Installing quarto..."
# git clone https://github.com/quarto-dev/quarto-cli $HOME/quarto-cli
# cd $HOME/quarto-cli
# ./configure.sh
# cd $HOME/dotfiles

# go
# wget https://go.dev/dl/go1.22.0.linux-amd64.tar.gz
# sudo tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz

# go env -w GO111MODULE=on
# go env -w GOPROXY=https://goproxy.cn,direct
# export GO111MODULE=on
# export GOPROXY=https://goproxy.cn

# go install github.com/x-motemen/ghq@latest
# rm go1.22.0.linux-amd64.tar.gz
