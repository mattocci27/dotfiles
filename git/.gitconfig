[user]
    name = Masatoshi Katabuchi
    email = mattocci27@gmail.com
    signingKey = ""

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    required = true
    process = git-lfs filter-process

[core]
    editor = vi ; Ensure vi is your preferred editor
    excludesfile = $HOME/.gitignore_global
    ignorecase = true ; Set to true for compatibility with case-insensitive filesystems

# Uncomment the sections below if you're using delta for diffs and have it configured
# [pager]
#     use = delta

# [interactive]
#     diffFilter = delta --color-only

# [delta]
#     navigate = true # use n and N to move between diff sections

# [merge]
#     conflictstyle = diff3

# [diff]
#     colorMoved = default

[alias]
    # Standard commands
    b = branch
    c = commit
    cm = commit -m
    f = fetch
    s = status
    st = stash
    rh = reset --hard

    # Checkout branches, including remote branches with interactive selection
    co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"

    # Preview file differences interactively
    d = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"

    # Select differences for adding
    da = !git d | xargs git add --

    # Select differences for interactive add
    dap = "!f() { for f in $(git d); do git add -p -- $f; done }; f"

    # Select differences to reset
    dr = !git d | xargs git reset --

    # Checkout HEAD for selected differences
    dch = !git d | xargs git checkout HEAD --

    # Pull the current branch
    pl = "!f() { args=$@; [ -z \"$args\" ] && git pull origin $(git symbolic-ref --short HEAD) || git pull $args; }; f"

    # Push the current branch
    ps = "!f() { args=$@; [ -z \"$args\" ] && git push origin HEAD || git push $args; }; f"

    # Display stash list with preview
    stl = !git stash list | fzf --preview 'echo {} | grep -o stash@{.*} | xargs git stash show -p --color=always' --height 90% | grep -o stash@{.*}

    # Apply a selected stash
    sta = !git stl | xargs git stash apply

    # Drop a selected stash
    std = !git stl | xargs git stash drop

[gpg]
    program = gpg

[commit]
    gpgSign = false ; Set to true if you wish to sign your commits

[tag]
    forceSignAnnotated = false

[difftool "sourcetree"]
    cmd = opendiff "$LOCAL" "$REMOTE"
    path =

[mergetool "sourcetree"]
    cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh "$LOCAL" "$REMOTE" -ancestor "$BASE" -merge "$MERGED"
    trustExitCode = true
